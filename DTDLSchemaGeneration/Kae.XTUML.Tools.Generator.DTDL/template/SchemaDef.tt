<#
  // Copyright (c) Knowledge & Experience. All rights reserved.
  // Licensed under the MIT license. See LICENSE file in the project root for full license information.
#>
<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Kae.CIM.MetaModel.CIMofCIM" #>
<#
    var subSdtDef = sdtDef.SubClassR17();
    if (subSdtDef is CIMClassS_CDT)
    {
        var cdtDef = (CIMClassS_CDT)subSdtDef;

        if (dtToDTDLDataType.ContainsKey(sdtDef.Attr_Name))
        {
            string typeName = dtToDTDLDataType[sdtDef.Attr_Name];
#>
<#= indent #>"schema": "<#= typeName #>"<#
        }
        else
        {
#>
            // TODO: ??? <#= sdtDef.Attr_Name #>
<#
        }
    }
    else if (subSdtDef is CIMClassS_UDT)
    {
        if (sdtDef.Attr_Name == "timestamp" || sdtDef.Attr_Name == "inst_ref<Timer>")
        {
            string typeName = dtToDTDLDataType[sdtDef.Attr_Name];
#>
<#= indent #>"schema": "<#= typeName #>"<#
        }
        else
        {
            var udtDef = (CIMClassS_UDT)subSdtDef;
            var baseSdtDef = udtDef.LinkedToR18();
            var schemaGen = new SchemaDef(indent, indentDelta, baseSdtDef);
            var schemaContent = schemaGen.TransformText();
#>
<#= schemaContent #><#
        }
    }
    else if (subSdtDef is CIMClassS_EDT)
    {
        var edtDef = (CIMClassS_EDT)subSdtDef;
        var schemaGen = new EnumDef(indent, indentDelta, edtDef);
        var schemaContent = schemaGen.TransformText();
#>
<#= schemaContent #><#
    }
    else if (subSdtDef is CIMClassS_SDT)
    {
        var sdtDef = (CIMClassS_SDT)subSdtDef;
        var schemaGen = new ObjectDef(indent, indentDelta, sdtDef);
        var schemaContent = schemaGen.TransformText();
#>
<#= schemaContent #><#
    }
    else if (subSdtDef is CIMClassS_IRDT)
    {
        var rdtDef = (CIMClassS_IRDT)subSdtDef;
#>
        // TODO: ??? S_IRDT - <#= sdtDef.Attr_Name #>
<#
    }
#>